// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * A local command to be executed.
 * This command will always be run on any preview or deployment
 */
export function run(args: RunArgs, opts?: pulumi.InvokeOptions): Promise<RunResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("command:local:run", {
        "assets": args.assets,
        "command": args.command,
        "dir": args.dir,
        "environment": args.environment,
        "interpreter": args.interpreter,
        "stdin": args.stdin,
    }, opts);
}

export interface RunArgs {
    /**
     * A list of glob paths to search after the command completes and return as an archive
     */
    assets?: string[];
    /**
     * The command to run.
     */
    command: string;
    /**
     * The working directory in which to run the command from.
     */
    dir?: string;
    /**
     * Additional environment variables available to the command's process.
     */
    environment?: {[key: string]: string};
    /**
     * The program and arguments to run the command.
     * On Linux and macOS, defaults to: `["/bin/sh", "-c"]`. On Windows, defaults to: `["cmd", "/C"]`
     */
    interpreter?: string[];
    /**
     * Pass a string to the command's process as standard in
     */
    stdin?: string;
}

export interface RunResult {
    /**
     * An archive of assets found after running the command.
     */
    readonly assets?: pulumi.asset.Archive;
    /**
     * The command to run.
     */
    readonly command: string;
    /**
     * The directory from which the command was run from.
     */
    readonly dir?: string;
    /**
     * Additional environment variables available to the command's process.
     */
    readonly environment?: {[key: string]: string};
    /**
     * The program and arguments to run the command.
     * For example: `["/bin/sh", "-c"]`
     */
    readonly interpreter?: string[];
    /**
     * The standard error of the command's process
     */
    readonly stderr: string;
    /**
     * String passed to the command's process as standard in.
     */
    readonly stdin: string;
    /**
     * The standard output of the command's process
     */
    readonly stdout?: string;
}

export function runOutput(args: RunOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<RunResult> {
    return pulumi.output(args).apply(a => run(a, opts))
}

export interface RunOutputArgs {
    /**
     * A list of glob paths to search after the command completes and return as an archive
     */
    assets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The command to run.
     */
    command: pulumi.Input<string>;
    /**
     * The working directory in which to run the command from.
     */
    dir?: pulumi.Input<string>;
    /**
     * Additional environment variables available to the command's process.
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The program and arguments to run the command.
     * On Linux and macOS, defaults to: `["/bin/sh", "-c"]`. On Windows, defaults to: `["cmd", "/C"]`
     */
    interpreter?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Pass a string to the command's process as standard in
     */
    stdin?: pulumi.Input<string>;
}
